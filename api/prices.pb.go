// Code generated by protoc-gen-go.
// source: prices.proto
// DO NOT EDIT!

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	prices.proto

It has these top-level messages:
	PricesRequest
	PriceEntry
	PricesResponse
*/
package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PricesRequest struct {
	Exchange  string `protobuf:"bytes,1,opt,name=exchange" json:"exchange,omitempty"`
	Shortcode string `protobuf:"bytes,2,opt,name=shortcode" json:"shortcode,omitempty"`
}

func (m *PricesRequest) Reset()                    { *m = PricesRequest{} }
func (m *PricesRequest) String() string            { return proto.CompactTextString(m) }
func (*PricesRequest) ProtoMessage()               {}
func (*PricesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PricesRequest) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *PricesRequest) GetShortcode() string {
	if m != nil {
		return m.Shortcode
	}
	return ""
}

type PriceEntry struct {
	Open          int64 `protobuf:"varint,1,opt,name=open" json:"open,omitempty"`
	Close         int64 `protobuf:"varint,2,opt,name=close" json:"close,omitempty"`
	High          int64 `protobuf:"varint,3,opt,name=high" json:"high,omitempty"`
	Low           int64 `protobuf:"varint,4,opt,name=low" json:"low,omitempty"`
	Volume        int64 `protobuf:"varint,5,opt,name=volume" json:"volume,omitempty"`
	UnixTimestamp int64 `protobuf:"varint,6,opt,name=unixTimestamp" json:"unixTimestamp,omitempty"`
}

func (m *PriceEntry) Reset()                    { *m = PriceEntry{} }
func (m *PriceEntry) String() string            { return proto.CompactTextString(m) }
func (*PriceEntry) ProtoMessage()               {}
func (*PriceEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PriceEntry) GetOpen() int64 {
	if m != nil {
		return m.Open
	}
	return 0
}

func (m *PriceEntry) GetClose() int64 {
	if m != nil {
		return m.Close
	}
	return 0
}

func (m *PriceEntry) GetHigh() int64 {
	if m != nil {
		return m.High
	}
	return 0
}

func (m *PriceEntry) GetLow() int64 {
	if m != nil {
		return m.Low
	}
	return 0
}

func (m *PriceEntry) GetVolume() int64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *PriceEntry) GetUnixTimestamp() int64 {
	if m != nil {
		return m.UnixTimestamp
	}
	return 0
}

type PricesResponse struct {
	Exchange              string        `protobuf:"bytes,1,opt,name=exchange" json:"exchange,omitempty"`
	MarketOpenMin         int32         `protobuf:"varint,2,opt,name=marketOpenMin" json:"marketOpenMin,omitempty"`
	MarketCloseMin        int32         `protobuf:"varint,3,opt,name=marketCloseMin" json:"marketCloseMin,omitempty"`
	TimezoneOffsetMin     int32         `protobuf:"varint,4,opt,name=timezoneOffsetMin" json:"timezoneOffsetMin,omitempty"`
	PriceEntryIntervalSec int32         `protobuf:"varint,5,opt,name=priceEntryIntervalSec" json:"priceEntryIntervalSec,omitempty"`
	PriceEntries          []*PriceEntry `protobuf:"bytes,6,rep,name=priceEntries" json:"priceEntries,omitempty"`
}

func (m *PricesResponse) Reset()                    { *m = PricesResponse{} }
func (m *PricesResponse) String() string            { return proto.CompactTextString(m) }
func (*PricesResponse) ProtoMessage()               {}
func (*PricesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PricesResponse) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *PricesResponse) GetMarketOpenMin() int32 {
	if m != nil {
		return m.MarketOpenMin
	}
	return 0
}

func (m *PricesResponse) GetMarketCloseMin() int32 {
	if m != nil {
		return m.MarketCloseMin
	}
	return 0
}

func (m *PricesResponse) GetTimezoneOffsetMin() int32 {
	if m != nil {
		return m.TimezoneOffsetMin
	}
	return 0
}

func (m *PricesResponse) GetPriceEntryIntervalSec() int32 {
	if m != nil {
		return m.PriceEntryIntervalSec
	}
	return 0
}

func (m *PricesResponse) GetPriceEntries() []*PriceEntry {
	if m != nil {
		return m.PriceEntries
	}
	return nil
}

func init() {
	proto.RegisterType((*PricesRequest)(nil), "main.PricesRequest")
	proto.RegisterType((*PriceEntry)(nil), "main.PriceEntry")
	proto.RegisterType((*PricesResponse)(nil), "main.PricesResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Prices service

type PricesClient interface {
	GetPrices(ctx context.Context, in *PricesRequest, opts ...grpc.CallOption) (*PricesResponse, error)
}

type pricesClient struct {
	cc *grpc.ClientConn
}

func NewPricesClient(cc *grpc.ClientConn) PricesClient {
	return &pricesClient{cc}
}

func (c *pricesClient) GetPrices(ctx context.Context, in *PricesRequest, opts ...grpc.CallOption) (*PricesResponse, error) {
	out := new(PricesResponse)
	err := grpc.Invoke(ctx, "/main.Prices/GetPrices", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Prices service

type PricesServer interface {
	GetPrices(context.Context, *PricesRequest) (*PricesResponse, error)
}

func RegisterPricesServer(s *grpc.Server, srv PricesServer) {
	s.RegisterService(&_Prices_serviceDesc, srv)
}

func _Prices_GetPrices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PricesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PricesServer).GetPrices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.Prices/GetPrices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PricesServer).GetPrices(ctx, req.(*PricesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Prices_serviceDesc = grpc.ServiceDesc{
	ServiceName: "main.Prices",
	HandlerType: (*PricesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPrices",
			Handler:    _Prices_GetPrices_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "prices.proto",
}

func init() { proto.RegisterFile("prices.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 344 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x92, 0x4d, 0x4f, 0xf2, 0x40,
	0x10, 0xc7, 0x03, 0x7d, 0xc9, 0xc3, 0x3c, 0x40, 0x70, 0x45, 0xd3, 0x10, 0x0f, 0x86, 0x18, 0xc3,
	0xc1, 0x70, 0x40, 0xe3, 0xd9, 0xc4, 0x18, 0xc3, 0xc1, 0x60, 0xaa, 0x5f, 0xa0, 0xd6, 0x81, 0x6e,
	0x6c, 0x77, 0x6b, 0x77, 0x41, 0xf4, 0x73, 0x78, 0xf2, 0xd3, 0xba, 0x3b, 0xe5, 0xc5, 0xaa, 0xf1,
	0x36, 0xf3, 0xfb, 0xff, 0x67, 0x3a, 0x33, 0x5d, 0x68, 0xe6, 0x05, 0x8f, 0x51, 0x0d, 0xf3, 0x42,
	0x6a, 0xc9, 0xdc, 0x2c, 0xe2, 0xa2, 0x3f, 0x86, 0xd6, 0x2d, 0xd1, 0x10, 0x9f, 0xe7, 0xa8, 0x34,
	0xeb, 0xc1, 0x3f, 0x5c, 0xc6, 0x49, 0x24, 0x66, 0x18, 0xd4, 0x0e, 0x6b, 0x83, 0x46, 0xb8, 0xc9,
	0xd9, 0x01, 0x34, 0x54, 0x22, 0x0b, 0x1d, 0xcb, 0x47, 0x0c, 0xea, 0x24, 0x6e, 0x41, 0xff, 0xa3,
	0x06, 0x40, 0xbd, 0xae, 0x84, 0x2e, 0x5e, 0x19, 0x03, 0x57, 0xe6, 0x28, 0xa8, 0x89, 0x13, 0x52,
	0xcc, 0xba, 0xe0, 0xc5, 0xa9, 0x54, 0x65, 0xb1, 0x13, 0x96, 0x89, 0x75, 0x26, 0x7c, 0x96, 0x04,
	0x4e, 0xe9, 0xb4, 0x31, 0xeb, 0x80, 0x93, 0xca, 0x97, 0xc0, 0x25, 0x64, 0x43, 0xb6, 0x0f, 0xfe,
	0x42, 0xa6, 0xf3, 0x0c, 0x03, 0x8f, 0xe0, 0x2a, 0x63, 0x47, 0xd0, 0x9a, 0x0b, 0xbe, 0xbc, 0xe7,
	0x99, 0x19, 0x3f, 0xca, 0xf2, 0xc0, 0x27, 0xb9, 0x0a, 0xfb, 0xef, 0x75, 0x68, 0xaf, 0x17, 0x55,
	0xb9, 0x14, 0xe6, 0xb3, 0x7f, 0x6d, 0x6a, 0x9a, 0x66, 0x51, 0xf1, 0x84, 0x7a, 0x62, 0xc6, 0xbe,
	0xe1, 0x82, 0x06, 0xf6, 0xc2, 0x2a, 0x64, 0xc7, 0xd0, 0x2e, 0xc1, 0xa5, 0xdd, 0xc3, 0xda, 0x1c,
	0xb2, 0x7d, 0xa3, 0xec, 0x04, 0x76, 0xb4, 0x99, 0xe4, 0x4d, 0x0a, 0x9c, 0x4c, 0xa7, 0x0a, 0xb5,
	0xb5, 0xba, 0x64, 0xfd, 0x29, 0xb0, 0x33, 0xd8, 0xcb, 0x37, 0x67, 0x1c, 0x0b, 0x8d, 0xc5, 0x22,
	0x4a, 0xef, 0x30, 0xa6, 0xbd, 0xbd, 0xf0, 0x77, 0xd1, 0x54, 0x35, 0x37, 0x02, 0x47, 0x65, 0xae,
	0xe0, 0x0c, 0xfe, 0x8f, 0x3a, 0x43, 0xfb, 0x97, 0x87, 0xdb, 0xdf, 0x12, 0x56, 0x5c, 0xa3, 0x0b,
	0xf0, 0xcb, 0xab, 0xb0, 0x73, 0x68, 0x5c, 0xa3, 0x5e, 0x25, 0xbb, 0x5f, 0xca, 0xd6, 0x2f, 0xa3,
	0xd7, 0xad, 0xc2, 0xf2, 0x8a, 0x0f, 0x3e, 0xbd, 0xa6, 0xd3, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xf9, 0x20, 0xc7, 0x4f, 0x5d, 0x02, 0x00, 0x00,
}
